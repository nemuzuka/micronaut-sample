plugins {
    id "net.ltgt.apt-eclipse" version "0.21"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "application"
    id 'com.github.sherter.google-java-format' version '0.8'
    id 'com.diffplug.gradle.spotless' version '3.27.2'
    id 'jacoco'
    id 'org.seasar.doma.compile' version '1.1.0'
}



version "0.1"
group "micronaut.sample"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

spotless {
    java {
        googleJavaFormat('1.7')
    }
}

dependencies {
    // https://docs.micronaut.io/latest/guide/languageSupport.html#lombok
    compileOnly "org.projectlombok:lombok:$projectLombokVersion"
    testCompileOnly "org.projectlombok:lombok:$projectLombokVersion"
    annotationProcessor "org.projectlombok:lombok:$projectLombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$projectLombokVersion"

    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "javax.annotation:javax.annotation-api"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    runtimeOnly "ch.qos.logback:logback-classic"
    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"

    annotationProcessor "io.micronaut.security:micronaut-security-annotations"
    implementation "io.micronaut.security:micronaut-security-session"

    implementation "io.micronaut.views:micronaut-views-thymeleaf"

    annotationProcessor "org.seasar.doma:doma-processor:2.37.0"
    implementation "org.seasar.doma:doma-core:2.37.0"
    implementation 'io.micronaut.flyway:micronaut-flyway'

    runtimeOnly 'io.micronaut.sql:micronaut-jdbc-hikari'
    runtimeOnly "com.h2database:h2:1.4.200"

    testImplementation "org.mockito:mockito-junit-jupiter:3.3.3"
    testImplementation "org.assertj:assertj-core:3.11.1"
    testImplementation "org.jsoup:jsoup:1.13.1"
}

test.classpath += configurations.developmentOnly

mainClassName = "micronaut.sample.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

shadowJar {
    mergeServiceFiles()
}

tasks.withType(JavaExec) {
    classpath += configurations.developmentOnly
    jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
    if (gradle.startParameter.continuous) {
        systemProperties(
                'micronaut.io.watch.restart':'true',
                'micronaut.io.watch.enabled':'true',
                "micronaut.io.watch.paths":"src/main"
        )
    }
}
